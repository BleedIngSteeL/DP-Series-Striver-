class Solution {
public:
    int solve(int ind,vector<int> &coins, int tar,vector<vector<int>> &dp){
        if(ind==0){
            if(tar % coins[ind]==0) return tar/coins[ind];
            else return 1e9;
        }

        if(dp[ind][tar] != -1) return dp[ind][tar];

        int notTake= solve(ind-1,coins,tar,dp);
        int take=INT_MAX;
        if(coins[ind]<=tar){
            take= 1+ solve(ind,coins,tar-coins[ind],dp);
        }

        return dp[ind][tar] = min(take,notTake);
    }

    int coinChange(vector<int>& coins, int amount) {
        int n=coins.size();
        vector<vector<int>> dp(n, vector<int> (amount+1,-1));
        int ans = solve(n-1,coins,amount,dp);
        if(ans>=1e9) return -1;
        return ans;
    }
};
