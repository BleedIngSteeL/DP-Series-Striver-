class Solution {
public:
    int solve(int ind,vector<int>& days, vector<int>& costs,vector<int> &dp){
        int n=days.size();
        //base case
        if(ind>=n) return 0;

        if(dp[ind] != -1) return dp[ind];

        int opt1=costs[0] + solve(ind+1,days,costs,dp);
        int i;
        for(i=ind;i<n && days[i]<days[ind]+7; i++);
        int opt2=costs[1] + solve(i, days,costs,dp);

        for(i=ind;i<n && days[i]<days[ind]+30; i++);
        int opt3=costs[2] + solve(i, days,costs,dp);

        return dp[ind]= min(opt1,min(opt2,opt3));
    }

    int mincostTickets(vector<int>& days, vector<int>& costs) {
        // sirf ek variable change ho rha h index
        int n= days.size();
        vector<int> dp(n,-1);
        return solve(0,days,costs,dp);
    }
};
