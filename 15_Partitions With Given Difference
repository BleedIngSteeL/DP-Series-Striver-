#include <bits/stdc++.h> 
int mod=(int)(1e9+7);

int findWays(vector<int>& arr, int k)
{
	int n=arr.size();
	vector<vector<int>> dp(n,vector<int> (k+1,0));

	if(arr[0]==0) dp[0][0]=2;
    else dp[0][0]=1;

	if(arr[0] != 0 && arr[0] <= k) dp[0][arr[0]]=1;

	for(int index=1;index<n;index++){
		for(int sum=0;sum<=k;sum++){
			int notPick=dp[index-1][sum];
			int pick=0;
			if(arr[index]<=sum){
				pick=dp[index-1][sum-arr[index]];
			}

			dp[index][sum]=(pick+ notPick) % mod;
		}
	}
	return dp[n-1][k];

}

int countPartitions(int n, int d, vector<int> &arr) {
    int totSum=0;
    for(auto it: arr) totSum+= it;
    if(totSum-d < 0 || (totSum-d)%2==1) return false;

    return findWays(arr,(totSum-d)/2);
}


